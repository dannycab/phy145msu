Traceback (most recent call last):
  File "/Users/caballero/opt/anaconda3/envs/teaching/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/caballero/opt/anaconda3/envs/teaching/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/caballero/opt/anaconda3/envs/teaching/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/caballero/opt/anaconda3/envs/teaching/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/caballero/opt/anaconda3/envs/teaching/lib/python3.10/asyncio/base_events.py", line 646, in run_until_complete
    return future.result()
  File "/Users/caballero/opt/anaconda3/envs/teaching/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/caballero/opt/anaconda3/envs/teaching/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/caballero/opt/anaconda3/envs/teaching/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
t0 = 0
tf = 5
N = 10000
deltat = (tf-t0)/N

y_arr_EC = np.zeros(N)
vy_arr_EC = np.zeros(N)
y_arr_RK2 = np.zeros(N)
vy_arr_RK2 = np.zeros(N)
y_arr_RK4 = np.zeros(N)
vy_arr_RK4 = np.zeros(N)

m = 1
g = 9.8
beta = 0
alpha = 0


#print(m*g/beta)

t_arr_EC, y_arr_EC, vy_arr_EC = EC(y_arr_EC, vy_arr_EC, deltat, m, g, alpha, beta, t0)
t_arr_RK2, y_arr_RK2, vy_arr_RK2 = RK2(y_arr_RK2, vy_arr_RK2, deltat, m, g, alpha, beta, t0)
t_arr_RK4, y_arr_RK4, vy_arr_RK4 = RK4(y_arr_RK4, vy_arr_RK4, deltat, m, g, alpha, beta, t0)

fig = plt.figure(figsize=(12,6))
plt.plot(t_arr_EC,y_arr_EC)
plt.plot(t_arr_RK2,y_arr_RK2)
plt.plot(t_arr_RK4,y_arr_RK4)
t = np.arange(0,5,0.1)
plt.plot(t, -0.5*g*t**2)
plt.xlabel('Time (t)')
plt.ylabel('Speed (y)')
plt.legend(['EC','RK2','RK4', 'No Drag'])

------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mTypeError[0m                                 Traceback (most recent call last)
Input [0;32mIn [8][0m, in [0;36m<cell line: 22>[0;34m()[0m
[1;32m     19[0m [38;5;66;03m#print(m*g/beta)[39;00m
[1;32m     21[0m t_arr_EC, y_arr_EC, vy_arr_EC [38;5;241m=[39m EC(y_arr_EC, vy_arr_EC, deltat, m, g, alpha, beta, t0)
[0;32m---> 22[0m t_arr_RK2, y_arr_RK2, vy_arr_RK2 [38;5;241m=[39m [43mRK2[49m[43m([49m[43my_arr_RK2[49m[43m,[49m[43m [49m[43mvy_arr_RK2[49m[43m,[49m[43m [49m[43mdeltat[49m[43m,[49m[43m [49m[43mm[49m[43m,[49m[43m [49m[43mg[49m[43m,[49m[43m [49m[43malpha[49m[43m,[49m[43m [49m[43mbeta[49m[43m,[49m[43m [49m[43mt0[49m[43m)[49m
[1;32m     23[0m t_arr_RK4, y_arr_RK4, vy_arr_RK4 [38;5;241m=[39m RK4(y_arr_RK4, vy_arr_RK4, deltat, m, g, alpha, beta, t0)
[1;32m     25[0m fig [38;5;241m=[39m plt[38;5;241m.[39mfigure(figsize[38;5;241m=[39m([38;5;241m12[39m,[38;5;241m6[39m))

Input [0;32mIn [6][0m, in [0;36mRK2[0;34m(y_arr, vy_arr, deltat, m, g, alpha, beta, tstart)[0m
[1;32m     30[0m [38;5;66;03m## The core of the RK algorithm[39;00m
[1;32m     31[0m [38;5;66;03m## For each point starting with the first and going to the last[39;00m
[1;32m     32[0m [38;5;66;03m## calculate the changes to the location and velocity [39;00m
[1;32m     33[0m [38;5;66;03m## Add those changes to the original value and[39;00m
[1;32m     34[0m [38;5;66;03m## store that in the very next position in the arrays[39;00m
[1;32m     35[0m [38;5;66;03m## REPEAT UNTIL DONE[39;00m
[1;32m     37[0m [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m np[38;5;241m.[39marange([38;5;241m0[39m,[38;5;28mlen[39m(y_arr)[38;5;241m-[39m[38;5;241m1[39m):
[1;32m     38[0m     
[1;32m     39[0m     [38;5;66;03m## It's two steps now[39;00m
[0;32m---> 40[0m     k1_y, k1_vy [38;5;241m=[39m [43mDeriveDragModel1D[49m[43m([49m[43my_arr[49m[43m[[49m[43mi[49m[43m][49m[43m,[49m[43m [49m[43mvy_arr[49m[43m[[49m[43mi[49m[43m][49m[43m,[49m[43m [49m[43mm[49m[43m,[49m[43m [49m[43mg[49m[43m,[49m[43m [49m[43malpha[49m[43m,[49m[43m [49m[43mbeta[49m[43m)[49m[38;5;241;43m*[39;49m[43mdeltat[49m   [38;5;66;03m## DONT FORGET THE DELTAT FOR THESE LIKE I DID FOR AN HOUR!!!![39;00m
[1;32m     41[0m     k2_y, k2_vy [38;5;241m=[39m DeriveDragModel1D(y_arr[i][38;5;241m+[39m[38;5;241m0.5[39m[38;5;241m*[39mk1_y, vy_arr[i][38;5;241m+[39m[38;5;241m0.5[39m[38;5;241m*[39mk1_vy, m, g, alpha, beta)[38;5;241m*[39mdeltat
[1;32m     43[0m     y_arr[i[38;5;241m+[39m[38;5;241m1[39m], vy_arr[i[38;5;241m+[39m[38;5;241m1[39m] [38;5;241m=[39m y_arr[i][38;5;241m+[39mk2_, vy_arr[i][38;5;241m+[39mk2_vy

[0;31mTypeError[0m: can't multiply sequence by non-int of type 'float'
TypeError: can't multiply sequence by non-int of type 'float'

