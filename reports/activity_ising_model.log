Traceback (most recent call last):
  File "/Users/caballero/opt/anaconda3/envs/teaching/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/caballero/opt/anaconda3/envs/teaching/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/caballero/opt/anaconda3/envs/teaching/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/caballero/opt/anaconda3/envs/teaching/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/caballero/opt/anaconda3/envs/teaching/lib/python3.10/asyncio/base_events.py", line 646, in run_until_complete
    return future.result()
  File "/Users/caballero/opt/anaconda3/envs/teaching/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/caballero/opt/anaconda3/envs/teaching/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/caballero/opt/anaconda3/envs/teaching/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
cellLength = 20
simulationSteps = 100000
couplingConstant = 1.0 ## J
temperature = 2.0

def calculateEnergy(spinArray):
    '''Calculate all the pairwise energy interactions and sum them up
    Do rows and columns separately and add them up.'''
    
    rowNeighborInteractionEnergy = np.sum(spinArray[0:cellLength-1,:]*spinArray[1:cellLength,:])
    columnNeighborInteractionEnergy = np.sum(spinArray[:,0:cellLength-1]*spinArray[:,1:cellLength])
    
    totalInteractionEnergy = rowNeighborInteractionEnergy+columnNeighborInteractionEnergy
    
    return -couplingConstant*totalInteractionEnergyamek

## Create an empty square array
spinArray = np.empty([cellLength,cellLength], int)

## Populate it with random spins
for row in range(cellLength):
    for column in range(cellLength):
        if random.random()<0.5:
            spinArray[row,column] = +1
        else:
            spinArray[row,column] = -1

# Calculate the initial energy and magnetization        
energyAtStep = calculateEnergy(spinArray)
magnetizationAtStep = np.sum(spinArray)

## Show the spin array 
## Black is spin up and white is spin down
plt.figure(figsize=(8,8))
c = plt.pcolor(spinArray, cmap='Greys')
plt.axis('square')
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mNameError[0m                                 Traceback (most recent call last)
Input [0;32mIn [2][0m, in [0;36m<cell line: 29>[0;34m()[0m
[1;32m     26[0m             spinArray[row,column] [38;5;241m=[39m [38;5;241m-[39m[38;5;241m1[39m
[1;32m     28[0m [38;5;66;03m# Calculate the initial energy and magnetization        [39;00m
[0;32m---> 29[0m energyAtStep [38;5;241m=[39m [43mcalculateEnergy[49m[43m([49m[43mspinArray[49m[43m)[49m
[1;32m     30[0m magnetizationAtStep [38;5;241m=[39m np[38;5;241m.[39msum(spinArray)
[1;32m     32[0m [38;5;66;03m## Show the spin array [39;00m
[1;32m     33[0m [38;5;66;03m## Black is spin up and white is spin down[39;00m

Input [0;32mIn [2][0m, in [0;36mcalculateEnergy[0;34m(spinArray)[0m
[1;32m     11[0m columnNeighborInteractionEnergy [38;5;241m=[39m np[38;5;241m.[39msum(spinArray[:,[38;5;241m0[39m:cellLength[38;5;241m-[39m[38;5;241m1[39m][38;5;241m*[39mspinArray[:,[38;5;241m1[39m:cellLength])
[1;32m     13[0m totalInteractionEnergy [38;5;241m=[39m rowNeighborInteractionEnergy[38;5;241m+[39mcolumnNeighborInteractionEnergy
[0;32m---> 15[0m [38;5;28;01mreturn[39;00m [38;5;241m-[39mcouplingConstant[38;5;241m*[39m[43mtotalInteractionEnergyamek[49m

[0;31mNameError[0m: name 'totalInteractionEnergyamek' is not defined
NameError: name 'totalInteractionEnergyamek' is not defined

